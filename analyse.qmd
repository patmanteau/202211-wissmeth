---
title: "Analyse der Framingham Heart Study"
editor: 
  markdown: 
    wrap: 72
---

# Framingham-Daten

Wir haben die Daten aus dem R-Paket
[riskCommunicator](https://search.r-project.org/CRAN/refmans/riskCommunicator/html/framingham.html)
exportiert.

Der Datensatz enthÃ¤lt folgende Attribute:

| Name     | Description                                                                                                                                                                                                                                                                                             |
|--------------------|----------------------------------------------------|
| RANDID   | Unique identification number for each participant. Values range from 2448-999312.                                                                                                                                                                                                                       |
| SEX      | Participant sex. 1 = Male (n = 5022), 2 = Female (n = 6605).                                                                                                                                                                                                                                            |
| TOTCHOL  | Serum Total Cholesterol (mg/dL). Values range from 107-696.                                                                                                                                                                                                                                             |
| AGE      | Age at exam (years). Values range from 32-81.                                                                                                                                                                                                                                                           |
| SYSBP    | Systolic Blood Pressure (mean of last two of three measurements) (mmHg). Values range from 83.5-295.                                                                                                                                                                                                    |
| DIABP    | Diastolic Blood Pressure (mean of last two of three measurements) (mmHg). Values range from 30-150.                                                                                                                                                                                                     |
| CURSMOKE | Current cigarette smoking at exam. 0 = Not current smoker (n = 6598), 1 = Current smoker (n = 5029).                                                                                                                                                                                                    |
| CIGPDAY  | Number of cigarettes smoked each day. 0 = Not current smoker. Values range from 0-90 cigarettes per day.                                                                                                                                                                                                |
| BMI      | Body Mass Index, weight in kilograms/height meters squared. Values range from 14.43-56.8.                                                                                                                                                                                                               |
| DIABETES | Diabetic according to criteria of first exam treated or first exam with casual glucose of 200 mg/dL or more. 0 = Not a diabetic (n = 11097), 1 = Diabetic (n = 530)                                                                                                                                     |
| BPMEDS   | Use of Anti-hypertensive medication at exam. 0 = Not currently used (n = 10090), 1 = Current use (n = 944).                                                                                                                                                                                             |
| HEARTRTE | Heart rate (Ventricular rate) in beats/min. Values range from 37-220.                                                                                                                                                                                                                                   |
| GLUCOSE  | Casual serum glucose (mg/dL). Values range from 39-478.                                                                                                                                                                                                                                                 |
| EDUC     | Some high school (1), high school/GED (2), some college/vocational school (3), college (4).                                                                                                                                                                                                             |
| PREVCHD  | Prevalent Coronary Heart Disease defined as pre-existing Angina Pectoris, Myocardial Infarction (hospitalized, silent or unrecognized), or Coronary Insufficiency (unstable angina). 0 = Free of disease (n = 10785), 1 = Prevalent disease (n = 842).                                                  |
| PREVAP   | Prevalent Angina Pectoris at exam. 0 = Free of disease (n = 11000), 1 = Prevalent disease (n = 627).                                                                                                                                                                                                    |
| PREVMI   | Prevalent Myocardial Infarction. 0 = Free of disease (n = 11253), 1 = Prevalent disease (n = 374).                                                                                                                                                                                                      |
| PREVSTRK | Prevalent Stroke. 0 = Free of disease (n = 11475), 1 = Prevalent disease (n = 152).                                                                                                                                                                                                                     |
| PREVHYP  | Prevalent Hypertensive. Subject was defined as hypertensive if treated or if second exam at which mean systolic was \>=140 mmHg or mean Diastolic \>=90 mmHg. 0 = Free of disease (n = 6283), 1 = Prevalent disease (n = 5344).                                                                         |
| TIME     | Number of days since baseline exam. Values range from 0-4854                                                                                                                                                                                                                                            |
| PERIOD   | Examination Cycle. 1 = Period 1 (n = 4434), 2 = Period 2 (n = 3930), 3 = Period 3 (n = 3263)                                                                                                                                                                                                            |
| HDLC     | High Density Lipoprotein Cholesterol (mg/dL). Available for Period 3 only. Values range from 10-189.                                                                                                                                                                                                    |
| LDLC     | Low Density Lipoprotein Cholesterol (mg/dL). Available for Period 3 only. Values range from 20-565.                                                                                                                                                                                                     |
| DEATH    | Death from any cause. 0 = Did not occur during followup, 1 = Did occur during followup.                                                                                                                                                                                                                 |
| ANGINA   | Angina Pectoris. 0 = Did not occur during followup, 1 = Did occur during followup.                                                                                                                                                                                                                      |
| HOSPMI   | Hospitalized Myocardial Infarction. 0 = Did not occur during followup, 1 = Did occur during followup.                                                                                                                                                                                                   |
| MI_FCHD  | Hospitalized Myocardial Infarction or Fatal Coronary Heart Disease. 0 = Did not occur during followup, 1 = Did occur during followup.                                                                                                                                                                   |
| ANYCHD   | Angina Pectoris, Myocardial infarction (Hospitalized and silent or unrecognized), Coronary Insufficiency (Unstable Angina), or Fatal Coronary Heart Disease. 0 = Did not occur during followup, 1 = Did occur during followup.                                                                          |
| STROKE   | Atherothrombotic infarction, Cerebral Embolism, Intracerebral Hemorrhage, or Subarachnoid Hemorrhage or Fatal Cerebrovascular Disease. 0 = Did not occur during followup, 1 = Did occur during followup.                                                                                                |
| CVD      | Myocardial infarction (Hospitalized and silent or unrecognized), Fatal Coronary Heart Disease, Atherothrombotic infarction, Cerebral Embolism, Intracerebral Hemorrhage, or Subarachnoid Hemorrhage or Fatal Cerebrovascular Disease. 0 = Did not occur during followup, 1 = Did occur during followup. |
| HYPERTEN | Hypertensive. Defined as the first exam treated for high blood pressure or second exam in which either Systolic is 6 140 mmHg or Diastolic 6 90mmHg. 0 = Did not occur during followup, 1 = Did occur during followup.                                                                                  |
| TIMEAP   | Number of days from Baseline exam to first Angina during the followup or Number of days from Baseline to censor date. Censor date may be end of followup, death or last known contact date if subject is lost to followup.                                                                              |
| TIMEMI   | Number of days from Baseline exam to first HOSPMI event during followup or Number of days from Baseline to censor date. Censor date may be end of followup, death or last known contact date if subject is lost to followup.                                                                            |
| TIMEMIFC | Number of days from Baseline exam to first MI_FCHD event during followup or Number of days from Baseline to censor date. Censor date may be end of followup, death or last known contact date if subject is lost to followup.                                                                           |
| TIMECHD  | Number of days from Baseline exam to first ANYCHD event during followup or Number of days from Baseline to censor date. Censor date may be end of followup, death or last known contact date if subject is lost to followup.                                                                            |
| TIMESTRK | Number of days from Baseline exam to first STROKE event during followup or Number of days from Baseline to censor date. Censor date may be end of followup, death or last known contact date if subject is lost to followup.                                                                            |
| TIMECVD  | Number of days from Baseline exam to first CVD event during followup or Number of days from Baseline to censor date. Censor date may be end of followup, death or last known contact date if subject is lost to followup.                                                                               |
| TIMEDTH  | Number of days from Baseline exam to death if occurring during followup or Number of days from Baseline to censor date. Censor date may be end of followup, or last known contact date if subject is lost to followup.                                                                                  |
| TIMEHYP  | Number of days from Baseline exam to first HYPERTEN event during followup or Number of days from Baseline to censor date. Censor date may be end of followup, death or last known contact date if subject is lost to followup.                                                                          |

# Vorbereitung der R-Umgebung

Wir laden die fÃ¼r unsere Untersuchung erforderlichen Pakete:

```{r}
#| echo: false
#| warning: false
library(tidyverse)
library(ggExtra)
library(patchwork)
library(mosaic)
library(glue)
```

ZusÃ¤tzlich definieren wir Helferfunktionen, um das Exportieren unserer
Plots fÃ¼r die PrÃ¤sentation zu erleichtern.

```{r}
do_save <- function(name, plot, widthFactor, heightFactor, ...) {
  fname <- glue("{name}_{widthFactor}x{heightFactor}.svg")
  width <- 7 * widthFactor
  height <- 7 * heightFactor
    ggsave(
      fname,
      plot = plot,
      path = "plots",
      width = width,
      height = height,
      bg = "transparent",
      ...
    )
}

hhr_save <- function(name, plot, ...) {
  heightFactor = 1
  for (widthFactor in c(1, 2)) {
    do_save(name, plot, widthFactor, heightFactor)
  }
}
```

# Daten laden und vorbereiten

Die Daten liegen in `ext.csv`. Wir definieren die Spaltentypen explizit,
sonst interpretiert R alles als Strings. AnschlieÃend benennen wir die
Level des Attributs SEX um:

```{r}
#| echo: false
#| warning: false
fram <- read_csv2(
  "ext.csv",
  col_types = list(
    RANDID = col_integer(),
    SEX = col_factor(),
    TOTCHOL = col_integer(),
    AGE = col_integer(),
    SYSBP = col_number(),
    DIABP = col_number(),
    CURSMOKE = col_logical(),
    CIGPDAY = col_integer(),
    BMI = col_number(),
    DIABETES = col_logical(),
    BPMEDS = col_logical(),
    HEARTRTE = col_integer(),
    GLUCOSE = col_integer(),
    EDUC = col_factor(ordered = TRUE),
    PREVCHD = col_logical(),
    PREVAP = col_logical(),
    PREVMI = col_logical(),
    PREVSTRK = col_logical(),
    PREVHYP = col_logical(),
    TIME = col_integer(),
    PERIOD = col_factor(ordered = TRUE),
    HDLC = col_integer(),
    LDLC = col_integer(),
    DEATH = col_logical(),
    ANGINA = col_logical(),
    HOSPMI = col_logical(),
    MI_FCHD = col_logical(),
    ANYCHD = col_logical(),
    STROKE = col_logical(),
    CVD = col_logical(),
    HYPERTEN = col_logical(),
    TIMEAP = col_integer(),
    TIMEMI = col_integer(),
    TIMEMIFC = col_integer(),
    TIMECHD = col_integer(),
    TIMESTRK = col_integer(),
    TIMECVD = col_integer(),
    TIMEDTH = col_integer(),
    TIMEHYP = col_integer()
  )
) |> mutate(SEX = forcats::fct_recode(SEX, "MALE" = "1", "FEMALE" = "2"))
```

Wir untersuchen, ob das Laden der Daten problemfrei funktioniert hat und
werfen einen Blick auf Struktur und Inhalt des Datensatzes:

```{r}
problems(fram)
str(fram)
fram
```

Nachdem die Daten nun in `fram` vorliegen, beginnen wir mit der
Untersuchung.

# Forschungsfragen

## Frage 1: FÃ¼hrt ein hoher BMI zu erhÃ¶htem systolischem Blutdruck?

Hypothese: *Jemand mit einem hohen BMI hat einen hÃ¶heren SYSBP*

-   `BMI`: unabhÃ¤ngige Variable
    -   verhÃ¤ltnisskaliert
-   `SYSBP`: abhÃ¤ngige Variable
    -   verhÃ¤ltnisskaliert

### Explorative Datenanalyse

#### Verteilung von BMI und systolischem Blutdruck

Beides sind numerische Variablen, wir schauen uns also ihre Verteilung
an.

```{r}
#| label: bmi_sysbp_dist
#| fig-cap: Verteilung von Body Mass Index und systolischem Blutdruck
#| warning: false
#| echo: false
bmi_hgram <- fram |>
  ggplot(aes(x=BMI)) +
  geom_histogram(fill="#4477aa", color="#4477aa", binwidth=1, alpha=0.8) + 
  theme_minimal()
  # TODO: 2discuss: Histogramm oder KDE?
  # ggtitle("Verteilung des Body Mass Index") +
  # geom_histogram(fill="#4477aa", color="#4477aa", binwidth=1, alpha=0.8) +
  # geom_density(fill="#4477aa", color="#4477aa", alpha=0.8) +
  

sysbp_hgram_colours <- c('1'='#228833', '5'='#ee6677')

sysbp_hgram <- fram |>
  ggplot(aes(x=SYSBP)) +
  geom_histogram(aes(colour='5', fill='5'), binwidth=5, alpha=0.8) + 
  geom_histogram(aes(colour='1', fill='1'), binwidth=1, alpha=0.8) +
  scale_colour_manual(values=sysbp_hgram_colours,
                      breaks=NULL) +
  scale_fill_manual(values=sysbp_hgram_colours,
                    name='binwidth') +
  theme_minimal()
  #ggtitle("Verteilung des systolischen Blutdrucks") +
  #geom_density(fill="#ee6677", color="#ee6677", alpha=0.8) + 
  

bmi_sysbp_dist <- bmi_hgram / sysbp_hgram
hhr_save("hyp1_bmi_sysbp_dist", bmi_sysbp_dist)
bmi_sysbp_dist
```

AuffÃ¤llig: "Runde" Blutdruckwerte - insbesondere 110, 120 und 130 - sind
Ã¼berreprÃ¤sentiert.

#### Zusammenhang zwischen BMI und systolischem Blutdruck

```{r}
# Konturplot (2D-KerndichteschÃ¤tzung) mit transparenter Punktwolke in der richtigen Farbe...
bmi_sysbp_scatter_contour <- ggplot(fram, aes(x=BMI, y=SYSBP) ) +
  geom_point(alpha=0.4, colour="#7a0177") +
  stat_density_2d(aes(fill = after_stat(level)), geom = "polygon", alpha=0.8) +
  scale_fill_distiller(palette="RdPu", direction=-1) +
  theme_minimal() +
  theme(
    legend.position='none'
  )

# ...mit Verteilung an den RÃ¤ndern
bmi_sysbp_scatter_contour_marg <- ggMarginal(
  bmi_sysbp_scatter_contour,
  type="histogram",
  xparams=list(colour="#4477aa", fill="#4477aa", alpha=0.8, binwidth=1),
  yparams=list(colour="#ee6677", fill="#ee6677", alpha=0.8, binwidth=5)
)

hhr_save("hyp1_bmi_sysbp_scatter_contour_marg", bmi_sysbp_scatter_contour_marg)
bmi_sysbp_scatter_contour_marg


# ...oder kleine Punkte
bmi_sysbp_scatter <- ggplot(fram, aes(x=BMI, y=SYSBP) ) +
  geom_point(colour="#7a0177", shape=".") +
  theme_minimal() +
  theme(
    legend.position='none'
  )

# ...mit Verteilung an den RÃ¤ndern
bmi_sysbp_scatter_marg <- ggMarginal(
  bmi_sysbp_scatter,
  type="histogram",
  xparams=list(colour="#4477aa", fill="#4477aa", alpha=0.8, binwidth=1),
  yparams=list(colour="#ee6677", fill="#ee6677", alpha=0.8, binwidth=5)
)

hhr_save("hyp1_bmi_sysbp_scatter_marg", bmi_sysbp_scatter_marg)
bmi_sysbp_scatter_marg
```

#### LagemaÃe

LagemaÃe BMI:

```{r}
favstats(~ BMI, data=fram)
```

LagemaÃe SYSBP:

```{r}
favstats(~ SYSBP, data=fram)
```

### Lineare Regression BMI SYSBP

```{r}
linReg <- lm(SYSBP ~ BMI, data=fram)
summary(linReg)

# plotModel macht leider auch overplotteten KÃ¤se. Da bleibt
# sogar eine Erkenntnis auf der Strecke, die
# einen im Konturplot praktisch anspringt...
# plotModel(linReg)

# ...die Regressionsgerade verfehlt das Zentrum der
# Punktwolke.
# TODO: hÃ¤ngt das mit dem niedrigen $r^{2}$ zusammen?
bmi_sysbp_scatter_regr <- bmi_sysbp_scatter +
  geom_abline(color='#228833',
              size = 1,
              slope=coef(linReg)['BMI'],
              intercept=coef(linReg)['(Intercept)'])

hhr_save("hyp1_bmi_sysbp_scatter_regr", bmi_sysbp_scatter_regr)
bmi_sysbp_scatter_regr

#bmi_sysbp_dist +
#  geom_smooth(method='lm')
```

$p \lt 2^{-16}$ - der Zusammenhang ist signifikant, mit jedem BMI-Punkt
steigt der systolische Blutdruck im Mittel um $\approx 1.5$

Wir sehen im Graphen, dass die Regressionsgerade das "heiÃe" Zentrum des
Streudiagramms verfehlt.

$r^{2} = 0.0756$, der BMI erklÃ¤rt alleine also nur einen geringen Anteil
der systematischen Varianz (fÃ¼r einen physiologischen MeÃwert aber
trotzdem ne ganze Menge)

TODO: Hier vielleicht noch Cohens d?

### Bootstrapping

1.  Graph von Bootstrapverteilung und Konfidenzintervall berechnen
2.  Graph von Nullverteilung und Konfidenzintervall berechnen
3.  Beide vergleichen, um Fehler 1. Art auszuschlieÃen (die Ã¼berlappen
    nicht nur nicht, die sind komplett unterschiedlich)

Bootstrapverteilung berechnen und ausgeben:

```{r}
set.seed(69420) # Reproduzierbarkeit
Bootstr_1 <- do(10000)* lm(SYSBP ~ BMI, data=resample(fram))
summary(Bootstr_1)
```

Standardabweichung der Bootstrapverteilung ermitteln:

```{r}
sd(~ BMI, data=Bootstr_1)
```

Konfidenzintervall ($\alpha = 1\%$) der Bootstrapverteilung ermitteln:

```{r}
qdata(~ BMI, data=Bootstr_1, p=c(0.005, 0.995))  
```

Nullverteilung berechnen:

```{r}
# Nullverteilung
set.seed(69420) # Reproduzierbarkeit
Nullver_1 <- do(10000) * lm(SYSBP ~ shuffle(BMI), data=resample(fram)) 
summary(Nullver_1)
```

Standardabweichung der Nullverteilung ermitteln:

```{r}
sd(~ BMI, data=Nullver_1)
```

Konfidenzintervall ($\alpha = 1\%$) der Nullverteilung ermitteln:

```{r}
qdata(~ BMI, data=Nullver_1, p=c(0.005, 0.995))  
```

Visualisierung der Verteilungen:

```{r}
cor(SYSBP ~ BMI, data=fram) # Korrelation aus Datensatz
coef(linReg) # Koeffizient aus Linearer Regression aus Datensatz

Bootstr_1$Verteilung <- "Bootstrap"
Nullver_1$Verteilung <- "Null"
hyp1_bootstrap_null_hist <- ggplot(rbind(Nullver_1, Bootstr_1)) + 
  aes(x = BMI, fill = Verteilung) +
  geom_histogram(binwidth = 0.01, alpha = 0.8) + 
  geom_histogram(binwidth = 0.01, alpha = 0.8) +
  theme_minimal()


hhr_save("hyp1_bootstrap_null_hist", hyp1_bootstrap_null_hist)
hyp1_bootstrap_null_hist
```

## Frage 2: BegÃ¼nstigt Diabetes schwere GefÃ¤Ãerkrankungen?

Hypothese: *Jemand mit bekannter Diabetes Diagnose (GLUCOSE \> 200) hat
eine hÃ¶here Chance, im Beobachtungszeitraum eine schwere GefÃ¤Ãerkrankung
zu erleiden*

-   `GLUCOSE`: unabhÃ¤ngige Variable
    -   verhÃ¤ltnisskaliert
-   `CVD`: abhÃ¤ngige Variable
    -   binÃ¤rskaliert

### Explorative Datenanalyse

```{r}
# GruppengrÃ¶Ãe
cvd_size <- fram |>
  group_by(CVD) |>
  summarise(num=n())

gluc_cvd_dist <- fram |>
  left_join(cvd_size) |>
  mutate(CVD = glue("{CVD}\n(n={num})")) |>
  ggplot(aes(x=CVD, y=GLUCOSE, fill=CVD)) +
    geom_jitter(alpha = 0.2, color="grey", fill="grey") + 
    geom_violin(width=0.9, alpha=0.8, adjust=.5) +
    geom_boxplot(width=0.2, color="#332288", fill="#332288", alpha=0.6, outlier.shape = NA) +
    coord_trans(y="log10") +
    scale_fill_brewer(type="qual") +
    theme_minimal() +
    theme(
      legend.position="none"
    )

hhr_save("hyp2_gluc_cvd_dist", gluc_cvd_dist)
gluc_cvd_dist

# mit ECDF sieht man den kleinen Unterschied etwas besser
gluc_cvd_edcf <- fram |> ggplot(aes(x=GLUCOSE, color=CVD)) +
  stat_ecdf(geom = "step", size = 1, alpha = 0.8) +
  theme_minimal()


hhr_save("hyp2_gluc_cvd_edcf", gluc_cvd_edcf)
gluc_cvd_edcf
```

### Rel. HÃ¤ufigkeit von Diabetikern in der Studie

```{r}
prop(~ GLUCOSE > 126, data=fram)
```

### Logistische Regression

```{r}
# Logistische Regression benÃ¶tigt hier einen numerischen Wert
fram <- fram |>
  mutate(CVDNUM = if_else(CVD == TRUE, 1, 0))

logreg1 <- glm(CVDNUM ~ GLUCOSE, family=binomial("logit"), data=fram)
summary(logreg1)


plotModel(logreg1)


log_smooth <- function(...) {
  geom_smooth(method = "glm", se = FALSE, color="#ee7733", method.args = list(family = "binomial"), ...)
}

gluc_cvdnum_logreg <- fram |> ggplot(aes(x=GLUCOSE, y=CVDNUM)) +
  geom_jitter(alpha=0.02, height=0.3) +
  stat_bin2d(binwidth = c(1, 0.04), aes(colour=..count..)) + 
  log_smooth(formula = y ~ x) +
  theme_minimal() +
  theme(
    legend.position = "none"
  )
  

hhr_save("hyp2_gluc_cvdnum_logreg", gluc_cvdnum_logreg)
gluc_cvdnum_logreg

#library(lsr)
#cohensD(GLUCOSE ~ CVD, data = fram)

```

### Bootstrapping

Bootstrapverteilung berechnen und ausgeben:

```{r}
set.seed(69420) # Reproduzierbarkeit
Bootstr_2 <- do(10000) * glm(CVD ~ GLUCOSE, family=binomial("logit"), data=resample(fram))
summary(Bootstr_2)
```

Standardabweichung der Bootstrapverteilung ermitteln:

```{r}
sd(~ GLUCOSE, data=Bootstr_2)
```


Konfidenzintervall ($\alpha = 1\%$) der Bootstrapverteilung ermitteln:

```{r}
qdata(~ GLUCOSE, data=Bootstr_2, p=c(0.005, 0.995))  
```

Nullverteilung berechnen und ausgeben:

```{r}
set.seed(69420)
Nullver_2 <-do(10000) * glm(CVD ~ shuffle(GLUCOSE), data=resample(fram), family=binomial("logit"))
summary(Nullver_2)

#coef(Bootstr_2)

# Anteil von Koeffizeinten aus der Nullverteilung der sich mit der Range der
# Koeffizienten aus dem Bootsrapping Ã¼berschneidet oder grÃ¶Ãer ist
#prop(~ abs(GLUCOSE) >= abs(coef(Bootstr_2) [2]), data=Nullver_2) 
```


Standardabweichung der Nullverteilung ermitteln:

```{r}
sd(~ GLUCOSE, data=Nullver_2)
```


Konfidenzintervall ($\alpha = 1\%$) der Nullverteilung ermitteln:

```{r}
qdata(~ GLUCOSE, data=Nullver_2, p=c(0.005, 0.995))  
```




Wahrscheinlichkeit eine CVD zu erleiden im Verlauf der Studie:

```{r}
prop(~ CVD, data=fram) 
```

Visualisierung der Verteilungen:

```{r}
hyp2_bootstrap_null_hist <- ggplot(rbind(Bootstr_2, Nullver_2), aes(x=GLUCOSE)) + 
  geom_histogram(data = Bootstr_2, fill = "#4477aa", colour = "#4477aa", alpha = 0.8, binwidth = 0.0005) + 
  geom_histogram(data = Nullver_2, fill = "#ee6677", colour = "#ee6677", alpha = 0.8, binwidth = 0.0005) +
  theme_minimal()

Bootstr_2$Verteilung <- "Bootstrap"
Nullver_2$Verteilung <- "Null"
hyp2_bootstrap_null_hist <- ggplot(rbind(Bootstr_2, Nullver_2)) + 
  aes(x = GLUCOSE, fill = Verteilung) +
  geom_histogram(binwidth = 0.0004, alpha = 0.8) + 
  geom_histogram(binwidth = 0.0004, alpha = 0.8) +
  theme_minimal()


hhr_save("hyp2_bootstrap_null_hist", hyp2_bootstrap_null_hist)
hyp2_bootstrap_null_hist
```


### Benjamins Code

```{r}
# fram <- fram |>
#   mutate(CVDNUM = if_else(CVD == TRUE, 1, 0))
# 
# # Logistische Rergession
# logReg <- glm(CVDNUM ~ GLUCOSE, data=fram, family=binomial("logit")) 
# 
# summary(logReg)
# 
# plotModel(logReg)
# 
# set.seed(69420)
# 
# Bootstr_2 <- do(10000) * glm(CVD ~ GLUCOSE, data=resample(Data), family=binomial("logit"))
# 
# summary(Bootstr_2)
# 
# gf_histogram(~ GLUCOSE, data=Bootstr_2)
# 
# set.seed(69420)
# 
# Nullver_2 <-do(10000) * glm(CVD ~ shuffle(GLUCOSE), data=resample(Data), family=binomial("logit"))
# 
# summary(Nullver_2)
# 
# gl_histogram(~ GLUCOSE, data=Nullver_2)
# 
# 
# # Anteil von Koeffizeinten aus der Nullverteilung der sich mit der Range der
# # Koeffizienten aus dem Bootsrapping Ã¼berschneidet oder grÃ¶Ãer ist
# prop(~ abs(GLUCOSE) >= abs(coef(Bootstr_2) [2]), data=Nullver_2) 
# 
# mosaicplot(CVD ~ DIABETES, data=Data)
# 
# # Wahrscheinlichkeit eine CVD zu erleiden im Verlauf der Studie
# prop(~ CVD, data=Data) 
```

```{r}
#linReg1000 <- lm(SYSBP ~ BMI + TOTCHOL + AGE + CIGPDAY + GLUCOSE, data=fram)
#plotModel(linReg1000)
#broom::tidy(linReg1000) |> filter(term == "(Intercept)") |> select(estimate)
```

Test:
`broom::tidy(linReg1000) |> filter(term == "(Intercept)") |> select(estimate)`
